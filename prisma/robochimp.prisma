generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
    output          = "../node_modules/@prisma/robochimp"
}

datasource db {
    provider = "postgresql"
    url      = env("ROBOCHIMP_DATABASE_URL")
}

model TriviaQuestion {
    id       Int      @id @unique @default(autoincrement())
    question String   @db.VarChar()
    answers  String[] @db.VarChar()

    @@map("trivia_question")
}

enum BlacklistedEntityType {
    guild
    user
}

model BlacklistedEntity {
    id     BigInt                @id @unique
    type   BlacklistedEntityType
    reason String?
    date   DateTime              @default(now()) @db.Timestamp(6)

    @@map("blacklisted_entity")
}

model User {
    id         BigInt  @id @unique
    bits       Int[]
    github_id  Int?
    patreon_id String?

    leagues_completed_tasks_ids Int[]
    leagues_points_balance_osb  Int   @default(0)
    leagues_points_balance_bso  Int   @default(0)
    leagues_points_total        Int   @default(0)

    react_emoji_id String?

    osb_total_level Int?
    bso_total_level Int?
    osb_total_xp    BigInt?
    bso_total_xp    BigInt?
    osb_cl_percent  Float?
    bso_cl_percent  Float?
    osb_mastery     Float?
    bso_mastery     Float?

    tag Tag[]

    store_bitfield Int[]

    testing_points         Float @default(0)
    testing_points_balance Float @default(0)

    @@map("user")
}

model PingableRole {
    role_id String @id
    name    String @unique @db.VarChar(32)

    @@map("pingable_role")
}

model Tag {
    id      Int    @id @unique @default(autoincrement())
    name    String @unique @db.VarChar(32)
    content String @db.VarChar(2000)

    user_id BigInt
    creator User   @relation(fields: [user_id], references: [id])

    @@map("tag")
}

model StoreCode {
    product_id Int
    code       String @id @unique

    redeemed_at         DateTime?
    redeemed_by_user_id String?   @db.VarChar(19)

    @@map("store_code")
}
