import { calcWhatPercent } from 'e';
import { CommandStore, KlasaMessage } from 'klasa';
import fetch from 'node-fetch';
import { Hiscores } from 'oldschooljs';
import { AccountType } from 'oldschooljs/dist/meta/types';

import { BotCommand } from '../../lib/structures/BotCommand';
import { toTitleCase } from '../../lib/util';

const map = {
	beginner: [
		1009, 720, 666, 602, 603, 759, 639, 1404, 1405, 725, 1406, 586, 587, 679, 648, 649, 616, 699, 700, 701, 548,
		549, 687, 688, 1013, 739, 609, 316, 729, 734, 672, 1097, 624, 655, 382, 981, 579, 580, 581, 766, 595, 219, 801,
		809, 813, 815, 821, 1064, 202, 383, 428, 429, 477, 478, 479, 495, 496, 497, 498, 499, 500, 709, 807, 822, 998,
		1057, 1060, 1146, 1205, 1213, 1217, 1219, 1346, 1504, 1505, 1506, 1507, 1508
	],
	easy: [
		694, 696, 768, 958, 1175, 721, 722, 915, 664, 665, 969, 1103, 604, 640, 641, 1237, 480, 726, 727, 588, 680, 681,
		650, 964, 1021, 617, 618, 702, 703, 704, 1376, 689, 690, 691, 747, 749, 754, 894, 1014, 1016, 1017, 1182, 1236,
		1305, 257, 738, 610, 611, 313, 314, 1298, 730, 731, 732, 735, 673, 674, 771, 1177, 1311, 476, 625, 626, 629,
		784, 905, 909, 1104, 1240, 656, 657, 534, 535, 271, 421, 422, 763, 1154, 1155, 1165, 1169, 1403, 596, 597, 210,
		220, 775, 900, 914, 970, 980, 1031, 1109, 1126, 1128, 1184, 1244, 1248, 1252, 1315, 1319, 1323, 1327, 0, 1, 2,
		3, 812, 1066, 1068, 1221, 1509, 11, 15, 165, 175, 192, 266, 267, 268, 269, 270, 410, 414, 430, 431, 432, 475,
		481, 509, 510, 511, 710, 717, 797, 803, 810, 811, 814, 816, 943, 994, 1002, 1006, 1070, 1072, 1082, 1086, 1138,
		1144, 1150, 1201, 1209, 1280, 1284, 1287, 1293, 1356, 1361, 1363, 1364, 1365, 1367, 1368, 1375, 1377, 1383,
		1402, 1407, 1408, 1435, 1436, 1478, 1495
	],
	medium: [
		697, 769, 830, 891, 959, 1010, 1091, 1176, 1232, 1233, 1304, 723, 782, 985, 986, 1200, 1332, 1398, 667, 668,
		669, 836, 886, 1024, 1373, 278, 605, 606, 607, 760, 823, 642, 643, 644, 1096, 16, 17, 20, 972, 976, 982, 1131,
		245, 246, 247, 248, 249, 272, 275, 589, 590, 591, 826, 1025, 1102, 233, 234, 235, 236, 682, 683, 684, 651, 652,
		653, 965, 1018, 1424, 1425, 1426, 1427, 619, 620, 621, 1023, 705, 706, 1100, 1101, 1179, 692, 748, 750, 828,
		895, 1015, 1306, 258, 740, 741, 742, 743, 1191, 1351, 1353, 1354, 1355, 1474, 1475, 612, 613, 614, 756, 1094,
		1183, 408, 494, 695, 773, 1299, 1300, 24, 733, 736, 737, 853, 907, 675, 676, 677, 772, 834, 968, 1098, 1178,
		1312, 1409, 627, 628, 630, 776, 780, 906, 926, 931, 1027, 1044, 1047, 1110, 1241, 658, 659, 660, 896, 281, 423,
		424, 425, 582, 583, 584, 764, 767, 1007, 1156, 1157, 1158, 1166, 1167, 1170, 1173, 282, 598, 599, 600, 774, 201,
		211, 322, 323, 324, 781, 785, 838, 918, 993, 1028, 1071, 1105, 1129, 1148, 1185, 1188, 1245, 1249, 1316, 1320,
		1324, 1328, 1374, 4, 5, 6, 7, 808, 804, 806, 820, 948, 953, 955, 1067, 1069, 1142, 1210, 1220, 1288, 1292, 19,
		30, 49, 57, 76, 84, 121, 130, 139, 148, 156, 166, 183, 193, 411, 415, 416, 417, 433, 482, 484, 485, 486, 490,
		491, 501, 502, 503, 512, 513, 514, 521, 522, 523, 524, 525, 526, 711, 712, 718, 788, 798, 802, 805, 817, 818,
		873, 874, 881, 910, 923, 936, 944, 947, 952, 954, 956, 995, 999, 1003, 1005, 1032, 1034, 1037, 1040, 1049, 1058,
		1061, 1073, 1083, 1087, 1115, 1127, 1139, 1147, 1151, 1153, 1202, 1206, 1214, 1218, 1295, 1297, 1253, 1256,
		1281, 1285, 1294, 1296, 1330, 1340, 1341, 1343, 1357, 1362, 1366, 1369, 1378, 1384, 1437, 1438, 1440, 1441,
		1442, 1479, 1481, 1482, 1486, 1498, 1501
	],
	hard: [
		698, 770, 831, 832, 892, 960, 1011, 1078, 1079, 1092, 1222, 1223, 1224, 1225, 1227, 1230, 1231, 532, 533, 724,
		1234, 1269, 670, 671, 887, 279, 608, 957, 645, 646, 1310, 536, 537, 728, 1267, 250, 251, 252, 253, 273, 276,
		487, 592, 593, 761, 762, 825, 827, 893, 967, 1180, 1181, 237, 1492, 238, 1493, 489, 685, 686, 654, 966, 1019,
		1022, 1301, 1428, 1429, 1430, 1431, 622, 623, 552, 553, 707, 1303, 562, 563, 693, 751, 752, 753, 755, 829, 1307,
		1308, 1309, 286, 385, 386, 483, 744, 745, 746, 786, 882, 883, 884, 937, 1189, 1192, 1194, 1196, 1207, 1211,
		1352, 1370, 1472, 283, 615, 757, 897, 898, 1095, 1238, 228, 229, 1392, 538, 539, 1347, 678, 890, 1099, 1239,
		1313, 631, 632, 633, 634, 635, 791, 842, 846, 851, 872, 901, 975, 1041, 1186, 1242, 1250, 1277, 1278, 1388, 661,
		662, 839, 875, 426, 585, 765, 835, 1008, 1093, 1159, 1160, 1168, 1171, 1174, 1235, 285, 601, 325, 326, 328, 329,
		330, 331, 332, 333, 334, 339, 340, 359, 360, 361, 362, 363, 368, 369, 470, 471, 777, 789, 837, 841, 843, 847,
		849, 855, 858, 902, 911, 916, 1029, 1111, 1116, 1120, 1124, 1317, 1321, 1325, 1329, 1410, 1411, 1412, 1413,
		1510, 1511, 1512, 1513, 1289, 1387, 1522, 12, 13, 9, 31, 39, 58, 66, 85, 93, 102, 111, 120, 129, 138, 147, 157,
		174, 184, 22, 377, 381, 384, 412, 418, 434, 504, 505, 506, 515, 516, 527, 528, 713, 714, 799, 863, 866, 869,
		878, 879, 880, 919, 921, 924, 927, 932, 938, 939, 940, 941, 942, 945, 949, 971, 977, 996, 1000, 1004, 1038,
		1045, 1050, 1059, 1062, 1074, 1077, 1084, 1088, 1106, 1140, 1143, 1145, 1149, 1152, 1203, 1215, 1254, 1258,
		1282, 1286, 1291, 1331, 1342, 1350, 1358, 1379, 1385, 1439, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451,
		1452, 1453, 1454, 1458, 1459, 1476, 1477, 1480, 1489, 1490, 1499, 1502, 1517, 1519, 1520, 1521
	],
	elite: [
		550, 551, 961, 1012, 1080, 1226, 1228, 1229, 546, 547, 888, 1349, 570, 571, 1302, 556, 557, 647, 1487, 1268,
		274, 277, 288, 576, 577, 594, 1026, 241, 1494, 242, 572, 573, 568, 569, 824, 1432, 1433, 1434, 558, 559, 542,
		543, 885, 899, 1193, 1195, 1208, 1212, 1216, 1265, 1371, 1372, 1473, 284, 564, 565, 758, 1314, 540, 541, 544,
		545, 348, 349, 350, 351, 352, 353, 354, 391, 560, 561, 636, 637, 638, 793, 794, 795, 796, 1030, 1042, 1130,
		1246, 1279, 1389, 1401, 566, 567, 663, 1381, 427, 554, 555, 963, 1161, 1162, 1163, 1164, 1172, 574, 575, 341,
		342, 343, 344, 345, 346, 347, 364, 370, 371, 372, 472, 473, 856, 859, 860, 861, 864, 865, 867, 868, 870, 871,
		912, 922, 925, 928, 929, 930, 933, 934, 935, 978, 987, 988, 989, 990, 991, 992, 1051, 1052, 1053, 1054, 1055,
		1056, 1132, 1133, 1134, 1135, 1136, 1137, 1187, 1197, 1198, 1199, 1243, 1270, 1272, 1496, 1273, 1274, 1497,
		1275, 1276, 1333, 1334, 1335, 1336, 1399, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1514,
		1515, 8, 10, 14, 18, 21, 23, 25, 40, 48, 67, 75, 94, 103, 112, 378, 379, 388, 389, 390, 413, 419, 420, 492, 507,
		508, 517, 518, 519, 529, 530, 578, 708, 715, 716, 719, 778, 783, 787, 790, 792, 800, 840, 844, 848, 850, 852,
		854, 876, 903, 908, 917, 920, 946, 950, 973, 983, 997, 1001, 1020, 1488, 1033, 1035, 1039, 1046, 1048, 1063,
		1075, 1085, 1089, 1090, 1107, 1112, 1113, 1117, 1118, 1121, 1122, 1125, 1141, 1190, 1204, 1247, 1251, 1255,
		1257, 1259, 1261, 1263, 1264, 1266, 1283, 1318, 1322, 1326, 1339, 1344, 1345, 1359, 1380, 1382, 1386, 1390,
		1391, 1393, 1394, 1396, 1397, 1400, 1450, 1455, 1456, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1483, 1484,
		1485, 1491, 1503, 1518
	],
	master: [
		962, 1081, 889, 373, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 474, 857, 862, 913, 979, 984,
		1271, 1516, 462, 392, 393, 394, 407, 409, 493, 520, 531, 779, 845, 877, 904, 951, 974, 1036, 1043, 1076, 1108,
		1114, 1119, 1123, 1260, 1262, 1337, 1338, 1348, 1360, 1395, 1457, 1463, 1464, 1469, 1470, 1471, 1500
	]
} as const;

const allTasks = Object.values(map).flat(1);

export default class extends BotCommand {
	public constructor(store: CommandStore, file: string[], directory: string) {
		super(store, file, directory, {
			description: 'Shows the stats of a leagues account.',
			usage: '(username:rsn)',
			requiredPermissionsForBot: ['EMBED_LINKS'],
			examples: ['+leagues Magnaboy'],
			categoryFlags: ['utility']
		});
	}

	async run(msg: KlasaMessage, [username]: [string]) {
		try {
			const [player, _leaguesData] = await Promise.all([
				Hiscores.fetch(username, { type: AccountType.Seasonal }),
				fetch(
					`https://sync.runescape.wiki/runelite/player/${encodeURIComponent(
						username
					)}/SHATTERED_RELICS_LEAGUE`
				)
					.then(res => res.json())
					.catch(() => null)
			]);
			let leaguesData: {
				username: string;
				timestamp: string;
				quests: Record<string, number>;
				levels: Record<string, number>;
				league_tasks: number[];
			} | null = _leaguesData;

			if (!leaguesData?.username) leaguesData = null;
			let str = `You have ${
				player.leaguePoints!.points
			} League Points, and you are Rank ${player.leaguePoints!.rank.toLocaleString()}.`;
			if (leaguesData) {
				str += `\nYou have completed ${leaguesData.league_tasks.length}/${allTasks.length} (${calcWhatPercent(
					leaguesData.league_tasks.length,
					allTasks.length
				).toFixed(2)}%) tasks.
You have completed ${Object.values(leaguesData.quests).filter(i => i === 2).length}/${
					Object.keys(leaguesData.quests).length
				} Quests\n`;
				for (const [key, val] of Object.entries(map) as any as [string, number[]][]) {
					str += `**${toTitleCase(key)} Tasks:** ${
						val.filter(i => leaguesData!.league_tasks.includes(i)).length
					}/${val.length}\n`;
				}
			}

			return msg.channel.send({
				content: str,
				embeds: [this.getStatsEmbed(`${username} (Shattered relics league)`, 11_995_146, player)]
			});
		} catch (err: any) {
			return msg.channel.send(err.message);
		}
	}
}
